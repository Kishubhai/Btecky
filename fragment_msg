package com.example.lovebyte.bottomui

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import com.example.lovebyte.adapter.messageUserAdapter
import com.example.lovebyte.databinding.FragmentMessageBinding
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.database.DataSnapshot
import com.google.firebase.database.DatabaseError
import com.google.firebase.database.FirebaseDatabase
import com.google.firebase.database.ValueEventListener

class MessageFragment : Fragment() {

    private lateinit var binding: FragmentMessageBinding

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        // Inflate the layout for this fragment
        binding = FragmentMessageBinding.inflate(layoutInflater)

        getData()

        return binding.root
    }

    private fun getData() {

        val currentId = FirebaseAuth.getInstance().currentUser!!.email!!.replace(".", "_")
//        val emaill = email.text.toString()
//        val encodedEmail = emaill.replace(".", "_") // Replace '.' with another character (e.g., '_')

        FirebaseDatabase.getInstance().getReference("chats")
            .addValueEventListener(object :ValueEventListener{
                override fun onDataChange(snapshot: DataSnapshot) {

                    var list = arrayListOf<String>()
                    var newList = arrayListOf<String>()

                    for (data in snapshot.children) {
                        if (isAdded) { // Check if fragment is still attached
                            if (data.key!!.contains(currentId)) {
                                list.add(data.key!!.replace(currentId, ""))
                                newList.add(data.key!!)
                            }
                            binding.recyclerView.adapter =
                                messageUserAdapter(requireContext(), list, newList)
                        }
                    }

                }

                override fun onCancelled(error: DatabaseError) {
                    Toast.makeText(requireContext(), error.message, Toast.LENGTH_SHORT).show()
                }

            })
    }

}
